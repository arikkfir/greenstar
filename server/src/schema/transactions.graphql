input TransactionsSortColumnsInput {
    col: TransactionsSortColumns!
    direction: SortDirection!
}

enum TransactionsSortColumns {
    ID
    CreatedAt
    UpdatedAt
    Date
    ReferenceID
    Amount
    Description
    SourceAccountName
    TargetAccountName
}

type Transaction {
    id: ID!
    createdAt: DateTime!
    updatedAt: DateTime!
    date: DateTime!
    sequence: Int!
    referenceID: String!
    amount: Float!
    currency: Currency!
    description: String!
    sourceAccount: Account!
    targetAccount: Account!
    classification: TransactionClassification
}

type TransactionClassification {
    sourceAccount: Account
    targetAccount: Account
    confidence: Float
    reasoning: String
}

type TransactionsResult {
    rows: [Transaction!]!
    totalCount: Int!
}

extend type Mutation {
    createTransaction(tx: CreateTransaction!): Transaction!
    deleteTransaction(tenantID: ID!, id: ID!): Void!
}

input CreateTransaction {
    tenantID: ID!
    date: DateTime!
    sequence: Int!
    referenceID: String!
    amount: Float!
    currency: String!
    description: String!
    sourceAccountID: ID
    targetAccountID: ID
}
