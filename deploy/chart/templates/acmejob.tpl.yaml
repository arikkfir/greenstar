{{- $prefix := include "greenstar.prefix" . -}}
{{- $componentName := "acme" -}}
{{- $serviceAccountName := printf "%s-%s" $prefix $componentName -}}
{{- $configMapName := printf "%s-%s" $prefix $componentName -}}
{{- $tenantsConfigMapName := printf "%s-%s-tenants" $prefix $componentName -}}
{{- /*------------------------------------------------------------------------------------------------------------*/ -}}
{{- if .Values.acme.files }}
---

apiVersion: v1
kind: ServiceAccount
metadata:
  {{- if not (empty .Values.acme.rbac.annotations) }}
  annotations:
    {{ range $name, $value := .Values.acme.rbac.annotations -}}
    {{ $name }}: {{ $value | quote }}
    {{- end }}
  {{- end }}
  labels:
    {{- include "greenstar.commonLabels" . | nindent 4 }}
    app.kubernetes.io/component: {{ $componentName | quote }}
  name: {{ $serviceAccountName | quote }}

---

apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    {{- include "greenstar.commonLabels" . | nindent 4 }}
    app.kubernetes.io/component: {{ $componentName | quote }}
  name: {{ $tenantsConfigMapName | quote }}
data:
  {{- range .Values.acme.files }}
  {{ .name }}: |
    {{- toYaml .content | nindent 4 }}
  {{- end }}

---

apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    "helm.sh/hook": post-install, post-upgrade
    "helm.sh/hook-weight": "-5"
  labels:
    {{- include "greenstar.commonLabels" . | nindent 4 }}
    app.kubernetes.io/component: {{ $componentName | quote }}
  name: {{ printf "%s-%s" $prefix $componentName | quote }}
spec:
  activeDeadlineSeconds: 120
  template:
    metadata:
      labels:
        {{- include "greenstar.commonLabels" . | nindent 8 }}
        app.kubernetes.io/component: {{ $componentName | quote }}
    spec:
      containers:
        - env:
            - name: GRAPHQL_API_URL
              value: http://greenstar-server/graphql
            {{- range $key, $value := .Values.acme.extraEnv }}
            - name: {{ $key | quote }}
              {{ toYaml $value | nindent 14 }}
            {{- end }}
          image: {{ printf "%s:%s" .Values.acme.image.repository (.Values.acme.image.tag | default .Chart.AppVersion) | quote }}
          name: acme
          resources:
            limits:
              cpu: {{ required "ACME job CPU limit is required" .Values.acme.resources.limits.cpu | quote }}
              memory: {{ required "ACME job RAM limit is required" .Values.acme.resources.limits.memory | quote }}
            requests:
              cpu: {{ required "ACME job CPU request is required" .Values.acme.resources.requests.cpu | quote }}
              memory: {{ required "ACME job RAM request is required" .Values.acme.resources.requests.memory | quote }}
          volumeMounts:
            - name: tenants
              readOnly: true
              mountPath: /tenants
      volumes:
        - name: tenants
          configMap:
            name: {{ $tenantsConfigMapName | quote }}
            optional: false
      restartPolicy: OnFailure
      enableServiceLinks: false
      serviceAccountName: {{ $serviceAccountName | quote }}
{{- end }}
